package GUI;
import NapakalakiGame.CombatResult;
import NapakalakiGame.Monster;
import NapakalakiGame.Napakalaki;
/**
 *
 * @author Sofía Almeida Bruno
 * @author María Victoria Granados Pozo
 */
public class NapakalakiView extends javax.swing.JFrame {
    private Napakalaki napakalakiModel;
    /**
     * Creates new form NapakalakiView
     */
    public NapakalakiView() {
        initComponents();
    }

    public void setNapakalaki(Napakalaki napakalaki){
        napakalakiModel = napakalaki;
        currentPlayer.setPlayer(napakalakiModel.getCurrentPlayer());
        currentMonster.setMonster(napakalakiModel.getCurrentMonster());
        currentMonster.setVisible(false);
        
        currentPlayer.setNapakalaki(napakalakiModel);
        repaint();
        revalidate();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        currentMonster = new GUI.MonsterView();
        meetMonster = new javax.swing.JButton();
        combat = new javax.swing.JButton();
        nextTurn = new javax.swing.JButton();
        currentPlayer = new GUI.PlayerView();
        showCombatResult = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        currentMonster.setMaximumSize(new java.awt.Dimension(268, 225));
        currentMonster.setMinimumSize(new java.awt.Dimension(268, 225));
        getContentPane().add(currentMonster, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, 250, 240));

        meetMonster.setBackground(new java.awt.Color(249, 159, 236));
        meetMonster.setFont(new java.awt.Font("Khmer OS System", 1, 12)); // NOI18N
        meetMonster.setText("Meet the Monster");
        meetMonster.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        meetMonster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meetMonsterActionPerformed(evt);
            }
        });
        getContentPane().add(meetMonster, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 510, 160, -1));

        combat.setBackground(new java.awt.Color(249, 159, 236));
        combat.setFont(new java.awt.Font("Khmer OS System", 1, 12)); // NOI18N
        combat.setText("Combat");
        combat.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        combat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combatActionPerformed(evt);
            }
        });
        getContentPane().add(combat, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 510, -1, -1));

        nextTurn.setBackground(new java.awt.Color(249, 159, 236));
        nextTurn.setFont(new java.awt.Font("Khmer OS System", 1, 12)); // NOI18N
        nextTurn.setText("Next Turn");
        nextTurn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        nextTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextTurnActionPerformed(evt);
            }
        });
        getContentPane().add(nextTurn, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 510, -1, -1));

        currentPlayer.setPreferredSize(new java.awt.Dimension(600, 600));
        getContentPane().add(currentPlayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 650, 580));

        showCombatResult.setMaximumSize(new java.awt.Dimension(280, 200));
        getContentPane().add(showCombatResult, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 280, 280, 200));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Muestra el siguiente monstruo del mazo
     * @param evt 
     */
    private void meetMonsterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meetMonsterActionPerformed
        currentMonster.setMonster(napakalakiModel.getCurrentMonster());
        currentMonster.setVisible(true);
        currentPlayer.disableMakeVisble();
        currentPlayer.disableDiscards();
    }//GEN-LAST:event_meetMonsterActionPerformed

    /**
     * Lucha contra el monstruo y muestra el resultado
     * @param evt 
     */
    private void combatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combatActionPerformed
       CombatResult combatResult = napakalakiModel.developCombat();
       String text = "";
       switch (combatResult) {
            case WINGAME : 
              text += "\n\n       " + currentPlayer.getName();
              text += "\n\n ¡¡¡ H A S   G A N A D O   L A   P A R T I D A !!!";
              break;
            case WIN :
              text += "\n\n Ganaste el combate";
              break;
            case LOSE :
              text += "\n\n Has perdido el combate, te toca cumplir el mal rollo";
              break;
            case LOSEANDCONVERT : 
                text += "\n\n Has perdido el combate, y te" +
                                     " has convertido en sectario"; 
                text += "\n No obstante, tienes que cumplir" + 
               " el mal rollo"; 
                break; 
          }
       showCombatResult.setText(text);
       currentPlayer.enableDiscards();
       currentPlayer.enableSteal();
       
       setNapakalaki(napakalakiModel);
    }//GEN-LAST:event_combatActionPerformed

    /**
     * Pasar de turno
     * @param evt 
     */
    private void nextTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextTurnActionPerformed
        if(napakalakiModel.nextTurn())
            setNapakalaki(napakalakiModel);
    }//GEN-LAST:event_nextTurnActionPerformed

    /**
     * @param args the command line arguments
     */
    public void showView(){
        this.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton combat;
    private GUI.MonsterView currentMonster;
    private GUI.PlayerView currentPlayer;
    private javax.swing.JButton meetMonster;
    private javax.swing.JButton nextTurn;
    private javax.swing.JLabel showCombatResult;
    // End of variables declaration//GEN-END:variables
}
